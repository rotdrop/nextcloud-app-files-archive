{"version":3,"file":"js/chunks/src_files-tab_ts-97082953fe61c4f800ef.js","mappings":"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","sources":["webpack://files-archive/./src/toolkit/util/generate-url.ts","webpack://files-archive/./src/toolkit/util/file-node-helper.ts","webpack://files-archive/./src/toolkit/types/axios-type-guards.ts","webpack://files-archive/./src/toolkit/util/nextcloud-sidebar-root.ts","webpack://files-archive/./src/views/FilesTab.vue?0864","webpack://files-archive/./src/views/FilesTab.vue?a30a","webpack://files-archive/FilesTab.vue","webpack://files-archive/./src/views/FilesTab.vue?3e00","webpack://files-archive/./src/views/FilesTab.vue","webpack://files-archive/./src/files-tab.ts"],"sourcesContent":["/**\n * @copyright Copyright (c) 2022-2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { appName } from '../../config.ts';\nimport {\n  generateUrl as nextcloudGenerateUrl,\n  generateOcsUrl as nextcloudGenerateOcsUrl,\n} from '@nextcloud/router';\nimport type { UrlOptions } from '@nextcloud/router';\n\n/**\n * Generate an absolute URL for this app.\n *\n * @param url The locate URL without app-prefix.\n *\n * @param urlParams Object holding url-parameters if url\n * contains parameters. \"Excess\" parameters will be appended as query\n * parameters to the URL.\n *\n * @param urlOptions Object with query parameters\n */\nexport const generateUrl = <T extends string>(url: T, urlParams?: Record<string, string|number|boolean|null>, urlOptions?: UrlOptions) => {\n  // const str = '/image/{joinTable}/{ownerId}';\n  let generated = nextcloudGenerateUrl('/apps/' + appName + '/' + url, urlParams, urlOptions);\n  const queryParams = { ...(urlParams || {}) };\n  for (const urlParam of url.matchAll(/{([^{}]*)}/g)) {\n    delete queryParams[urlParam[1]];\n  }\n  const queryArray: string[] = [];\n  for (const [key, value] of Object.entries(queryParams)) {\n    try {\n      queryArray.push(key + '=' + encodeURIComponent(value?.toString() || ''));\n    } catch (e) {\n      console.debug('STRING CONVERSION ERROR', e);\n    }\n  }\n  if (queryArray.length > 0) {\n    generated += '?' + queryArray.join('&');\n  }\n  return generated;\n};\n\nexport const generateOcsUrl = <T extends string>(url: T, urlParams?: Record<string, string|number|boolean|null>, urlOptions?: UrlOptions) => {\n  let generated = nextcloudGenerateOcsUrl('/apps/' + appName + '/' + url, urlParams, urlOptions);\n  const queryParams = { ...urlParams };\n  for (const urlParam of url.matchAll(/{([^{}]*)}/g)) {\n    delete queryParams[urlParam[1]];\n  }\n  const queryArray: string[] = [];\n  for (const [key, value] of Object.entries(queryParams)) {\n    try {\n      queryArray.push(key + '=' + encodeURIComponent(value?.toString() || ''));\n    } catch (e) {\n      console.debug('STRING CONVERSION ERROR', e);\n    }\n  }\n  if (queryArray.length > 0) {\n    generated += '?' + queryArray.join('&');\n  }\n  return generated;\n};\n\nexport default generateUrl;\n","/**\n * @copyright Copyright (c) 2024, 2025, 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { join } from 'path';\nimport { File, Folder, FileType } from '@nextcloud/files';\nimport { generateRemoteUrl } from '@nextcloud/router';\n\nexport interface FileInfoDTO {\n  fileid: number,\n  path: string,\n  topLevelFolder: string,\n  relativePath: string,\n  basename: string,\n  lastmod: number,\n  mime: string,\n  size: number,\n  type: FileType,\n  hasPreview: boolean,\n  permissions: number,\n  'mount-type': string,\n  etag: string,\n}\n\n/**\n * @param fileInfo File-info object.\n *\n * @param owner If undefined the current user is used.\n *\n * @return Result.\n */\nexport const fileInfoToNode = (fileInfo: FileInfoDTO, owner?: string) => {\n  owner = owner || getCurrentUser()!.uid;\n  const userFrontEndFolder = '/' + owner + '/files';\n  if (fileInfo.topLevelFolder !== userFrontEndFolder) {\n    throw new Error(`${fileInfo.path} is located outside of the front end user file space ${userFrontEndFolder}.`);\n  }\n  const nodeData = {\n    id: fileInfo.fileid,\n    source: generateRemoteUrl(join('dav/files', owner, fileInfo.relativePath)),\n    root: `/files/${owner}`,\n    mime: fileInfo.mime,\n    mtime: new Date(fileInfo.lastmod * 1000),\n    owner,\n    size: fileInfo.size,\n    permissions: fileInfo.permissions,\n    attributes: {\n      ...fileInfo,\n      'has-preview': fileInfo.hasPreview,\n    },\n  };\n  return fileInfo.type === 'file' ? new File(nodeData) : new Folder(nodeData);\n};\n","/**\n * Orchestra member, musicion and project management application.\n *\n * CAFEVDB -- Camerata Academica Freiburg e.V. DataBase.\n *\n * @author Claus-Justus Heine\n * @copyright 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport axios, { AxiosError } from 'axios';\nimport type { AxiosResponse } from 'axios';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface AxiosErrorResponse<T = unknown, D = any> extends Omit<AxiosError<T, D>, 'response'> {\n  response: AxiosResponse<T, D>,\n}\n\nexport const isAxiosError = (error: unknown): error is AxiosError => axios.isAxiosError(error);\n\nexport const isAxiosErrorResponse = (error: unknown): error is AxiosErrorResponse =>\n  isAxiosError(error) && !!error.response;\n","/**\n * @author Claus-Justus Heine\n * @copyright 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Vue, { getCurrentInstance } from 'vue';\nimport { NodeStatus } from '@nextcloud/files';\nimport { emit } from '@nextcloud/event-bus';\nimport type { Node } from '@nextcloud/files';\n\nlet currentInstance: null|Vue = null;\n\ntype SidebarRoot = Vue & { node?: Node };\n\nlet sidebarRoot: null|SidebarRoot = null;\n\nconst busyNodes: Node[] = [];\n\n/**\n * Find the root of the right sidebar in order to get access to\n * interesting properties like the current Node-object.\n */\nexport const getSidebarRoot = () => {\n  let instance = getCurrentInstance()?.proxy || null;\n  if (sidebarRoot && ((instance && currentInstance === instance) || (!instance && currentInstance))) {\n    return sidebarRoot;\n  }\n  if (instance) {\n    currentInstance = instance;\n  } else {\n    instance = currentInstance;\n  }\n  while (instance && instance.$parent && instance.$options.name !== 'SidebarRoot') {\n    instance = instance?.$parent;\n  }\n  sidebarRoot = instance || null;\n  return sidebarRoot;\n};\n\nexport const getSidebarNode = () => {\n  const sidebarRoot = getSidebarRoot();\n  return sidebarRoot?.node || null;\n};\n\nexport const setSidebarNodeBusy = (state: boolean = true) => {\n  const node = getSidebarNode();\n  if (node && state) {\n    node.status = NodeStatus.LOADING;\n    emit('files:node:updated', node);\n    busyNodes.push(node);\n  } else {\n    for (const node of busyNodes) {\n      node.status = undefined;\n      emit('files:node:updated', node);\n    }\n    busyNodes.splice(0, busyNodes.length);\n  }\n};\n\nexport const clearSidebarNodeBusy = () => setSidebarNodeBusy(false);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { appName } from '../config.ts'\nimport {\n  computed,\n  reactive,\n  ref,\n  set as vueSet,\n  del as vueDel,\n  onBeforeMount,\n  onUnmounted,\n  nextTick,\n} from 'vue'\nimport getInitialState from '../toolkit/util/initial-state.ts'\nimport { generateUrl, generateRemoteUrl } from '@nextcloud/router'\nimport { emit, subscribe, unsubscribe } from '@nextcloud/event-bus'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport generateAppUrl from '../toolkit/util/generate-url.ts'\nimport { fileInfoToNode } from '../toolkit/util/file-node-helper.ts'\nimport type { FileInfoDTO } from '../toolkit/util/file-node-helper.ts'\nimport { md5 } from 'js-md5'\nimport { showError, showInfo, TOAST_PERMANENT_TIMEOUT } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\nimport NetworkOffIcon from 'vue-material-design-icons/NetworkOff.vue'\nimport CancelIcon from 'vue-material-design-icons/Cancel.vue'\nimport { formatFileSize } from '@nextcloud/files'\nimport {\n  NcActionInput,\n  NcActionCheckbox,\n  NcActions,\n  NcActionButton,\n  NcListItem,\n} from '@nextcloud/vue'\nimport FilePrefixPicker from '@rotdrop/nextcloud-vue-components/lib/components/FilePrefixPicker.vue'\nimport axios from '@nextcloud/axios'\nimport type { LegacyFileInfo, Node } from '@nextcloud/files'\nimport { isAxiosErrorResponse } from '../toolkit/types/axios-type-guards.ts'\nimport type { NextcloudEvents } from '@nextcloud/event-bus'\nimport type {\n  ArchiveMount,\n  ArchiveMountEntity,\n  GetArchiveMountResponse,\n} from '../model/archive-mount.d.ts'\nimport { setSidebarNodeBusy as setBusyState } from '../toolkit/util/nextcloud-sidebar-root.ts'\nimport logger from '../console.ts'\nimport type { InitialState } from '../types/initial-state.d.ts'\n\ninterface ArchiveInfo {\n  commonPathPrefix: string,\n  compressedSize: number,\n  defaultMountPoint: string,\n  defaultTargetBaseName: string,\n  numberOfFiles: number,\n  originalSize: number,\n  size: number,\n  format: string,\n  mimeType: string,\n  backendDriver: string,\n  comment?: string,\n}\n\ninterface ArchiveJob {\n  target: 'mount'|'extract',\n  userId: string,\n  sourceId: number,\n  sourcePath: string,\n  destinationPath: string,\n  archivePassphrase?: string,\n  stripCommonPathPrefix: boolean,\n  needsAuthentication: boolean,\n  authToken: string,\n}\n\ninterface ArchiveInfoResponse {\n  messages: string[],\n  archiveStatus: number, //\n  archiveInfo: ArchiveInfo,\n}\n\ninterface CancelJobResponse {\n  removed?: ArchiveJob[],\n  messages?: string[],\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'FilesTab',\n  setup(__props, { expose }) {\n\nsetBusyState(false) // needs to be done once while in setup mode\n\nconst archivePassPhraseComponent = ref<null|typeof NcActionInput>(null)\nconst mountOptionsComponent = ref<null|typeof NcActions>(null)\nconst extractionOptionsComponent = ref<null|typeof NcActions>(null)\n\nconst loading = ref(0)\n\nconst fileInfo = ref<undefined|LegacyFileInfo>(undefined)\nconst fileName = computed(() => fileInfo.value ? fileInfo.value.path + '/' + fileInfo.value.name : null)\nconst archiveFileId = computed(() => fileInfo.value?.id)\n\nconst ArchiveStatusOk = 0\nconst ArchiveStatusTooLarge = 1\nconst ArchiveStatusBomb = 2\n\nconst archiveInfo = ref<undefined|ArchiveInfo>(undefined)\nconst archiveStatus = ref<undefined|number>(undefined)\n\nconst archiveMounts = ref<ArchiveMount[]>([])\n\nconst pendingJobs = ref<Record<string, ArchiveJob> >({})\nconst jobsArePending = computed(() => Object.keys(pendingJobs.value).length > 0)\n\nconst initialState = getInitialState<InitialState>()\n\nconst archiveMountStripCommonPathPrefix = ref(!!initialState?.mountStripCommonPathPrefixDefault)\nconst archiveExtractStripCommonPathPrefix = ref(!!initialState?.extractStripCommonPathPrefixDefault)\nconst archiveMountBackgroundJob = ref(!!initialState?.mountBackgroundJob)\nconst archiveExtractBackgroundJob = ref(!!initialState?.extractBackgroundJob)\nconst archivePassPhrase = ref<undefined|string>(undefined)\n\nconst showArchiveInfo = ref(true)\nconst showArchivePassPhrase = ref(false)\nconst showArchiveMounts = ref(false)\nconst showArchiveExtraction = ref(false)\nconst showPendingJobs = ref(false)\nconst openMountTarget = computed(() => md5(generateUrl('') + appName + '-open-archive-mount'))\n\nconst archiveMountFileInfo = reactive({\n  dirName: '',\n  baseName: '',\n})\n\nconst archiveExtractFileInfo = reactive({\n  dirName: '',\n  baseName: '',\n})\n\nconst archiveMountBaseName = computed({\n  get() {\n    return archiveMountFileInfo.baseName\n  },\n  set(value) {\n    vueSet(archiveMountFileInfo, 'baseName', value)\n    return value\n  },\n})\n\nconst archiveMountDirName = computed({\n  get() {\n    return archiveMountFileInfo.dirName\n  },\n  set(value) {\n    vueSet(archiveMountFileInfo, 'dirName', value)\n    return value\n  },\n})\n\nconst archiveExtractBaseName = computed({\n  get() {\n    return archiveExtractFileInfo.baseName\n  },\n  set(value) {\n    vueSet(archiveExtractFileInfo, 'baseName', value)\n    return value\n  },\n})\n\nconst archiveExtractDirName = computed({\n  get() {\n    return archiveExtractFileInfo.dirName\n  },\n  set(value) {\n    vueSet(archiveExtractFileInfo, 'dirName', value)\n    return value\n  },\n})\n\nconst archiveMountPathName = computed(() => archiveMountDirName.value + (archiveMountBaseName.value ? '/' + archiveMountBaseName.value : ''))\nconst archiveExtractPathName = computed(() => archiveExtractDirName.value + (archiveExtractBaseName.value ? '/' + archiveExtractBaseName.value : ''))\n\nconst archiveStatusText = computed(() => {\n  if (archiveStatus.value! === ArchiveStatusOk) {\n    return t(appName, 'ok')\n  } else if (archiveStatus.value! & ArchiveStatusBomb) {\n    return t(appName, 'zip bomb')\n  } else if (archiveStatus.value! & ArchiveStatusTooLarge) {\n    return t(appName, 'too large')\n  }\n  return t(appName, 'unknown')\n})\n\n// const archiveFileDirName = computed(() => fileInfo.value?.path)\n// const archiveFileBaseName = computed(() => fileInfo.value?.name)\n// const archiveFilePathName = computed(() => fileInfo.value?.path + '/' + fileInfo.value?.name)\nconst archiveMounted = computed(() => archiveMounts.value.length > 0)\n// const archiveInfoText = computed(() => JSON.stringify(archiveInfo.value, null, 2))\nconst humanArchiveOriginalSize = computed(() =>\n  !isNaN(parseInt('' + archiveInfo.value?.originalSize))\n    ? formatFileSize(archiveInfo.value!.originalSize)\n    : t(appName, 'unknown'),\n)\nconst humanArchiveCompressedSize = computed(() =>\n  !isNaN(parseInt('' + archiveInfo.value?.compressedSize))\n    ? formatFileSize(archiveInfo.value!.compressedSize)\n    : t(appName, 'unknown'),\n)\nconst humanArchiveFileSize = computed(() =>\n  !isNaN(parseInt('' + archiveInfo.value?.size))\n    ? formatFileSize(archiveInfo.value!.size)\n    : t(appName, 'unknown'),\n)\nconst numberOfArchiveMembers = computed(() => {\n  if (!archiveInfo.value\n      || archiveInfo.value?.numberOfFiles === undefined\n      || isNaN(parseInt('' + archiveInfo.value?.numberOfFiles))) {\n    return t(appName, 'unknown')\n  }\n  return '' + archiveInfo.value?.numberOfFiles\n})\nconst commonPathPrefix = computed(() =>\n  !archiveInfo.value\n    || archiveInfo.value.commonPathPrefix === undefined\n    ? t(appName, 'unknown')\n    : '/' + archiveInfo.value.commonPathPrefix,\n)\n// const mountPointTitle = computed(() =>\n//   t(appName, 'Mount Points')\n//     + ' ('\n//     + (archiveMounted ? archiveMounts.value.length : t(appName, 'not mounted'))\n//     + ')'\n// )\n\n// We ____DO____  want to compare numerically here.\nconst isLt = (a: null|undefined|number, b: null|undefined|number) => a! < b!\n\nconst openMountOptionsMenu = () => {\n  mountOptionsComponent.value?.openMenu()\n}\n\nconst openExtractionOptionsMenu = () => {\n  extractionOptionsComponent.value?.openMenu()\n}\n\n/**\n * Fetch some needed data ...\n */\nconst getData = async () => {\n  archiveMountStripCommonPathPrefix.value = !!initialState?.mountStripCommonPathPrefixDefault\n  archiveExtractStripCommonPathPrefix.value = !!initialState?.extractStripCommonPathPrefixDefault\n  archiveMountBackgroundJob.value = !!initialState?.mountBackgroundJob\n  archiveExtractBackgroundJob.value = !!initialState?.extractBackgroundJob\n\n  if (!fileName.value) {\n    return\n  }\n\n  getArchiveInfo(fileName.value)\n  refreshArchiveMounts(fileName.value, true)\n  getPendingJobs(fileName.value, true)\n}\n\n/**\n * Update current fileInfo and fetch new data\n * @param newFileInfo the current file FileInfo\n */\nconst update = async (newFileInfo: LegacyFileInfo) => {\n  fileInfo.value = newFileInfo\n\n  /* this.fileList = OCA.Files.App.currentFileList\n   * this.fileList.$el.off('updated').on('updated', function(event) {\n   *   logger.info('FILE LIST UPDATED, ARGS', arguments)\n   * }) */\n  archiveMountBaseName.value = fileInfo.value.name.split('.')[0]\n  archiveMountDirName.value = fileInfo.value.path\n\n  archiveExtractBaseName.value = archiveMountBaseName.value\n  archiveExtractDirName.value = archiveMountDirName.value\n\n  getData()\n}\n\nexpose({ update })\n\nconst getArchiveInfo = async (fileName: string) => {\n  ++loading.value\n  fileName = encodeURIComponent(fileName)\n  const url = generateAppUrl('archive/info/{fileName}', { fileName })\n  const requestData: Record<string, string> = {}\n  if (archivePassPhrase.value) {\n    requestData.passPhrase = archivePassPhrase.value\n  }\n  try {\n    const response = await axios.post<ArchiveInfoResponse>(url, requestData)\n    const responseData = response.data\n    archiveInfo.value = responseData.archiveInfo\n    archiveStatus.value = responseData.archiveStatus\n    if (responseData.messages) {\n      for (const message of responseData.messages) {\n        showInfo(message)\n      }\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as ArchiveInfoResponse\n      archiveInfo.value = responseData.archiveInfo\n      archiveStatus.value = responseData.archiveStatus\n      if (responseData.messages) {\n        for (const message of responseData.messages) {\n          showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n        }\n      }\n    } else {\n      archiveInfo.value = undefined\n    }\n  }\n  if (archiveInfo.value?.defaultMountPoint) {\n    archiveMountBaseName.value = archiveInfo.value.defaultMountPoint\n  }\n  if (archiveInfo.value?.defaultTargetBaseName) {\n    archiveExtractBaseName.value = archiveInfo.value.defaultTargetBaseName\n  }\n  --loading.value\n}\n\nconst refreshArchiveMounts = async (filename: string, noEmit?: boolean) => {\n  const oldMounts = [...archiveMounts.value]\n  const mounts = await getArchiveMounts(filename, false)\n  archiveMounts.value = mounts.mounts\n  if (noEmit) {\n    // do no emit birth during initialization\n    return\n  }\n  // emit birth and death signals as needed, in order to update\n  // the frontend file-listing. The computational effort is\n  // quadratic, but we are talking here about the common case that\n  // there is only a single mount -- or by accident another\n  // one. So what.\n  const newMounts = archiveMounts.value.filter((mount) => oldMounts.findIndex((oldMount) => mount.mountPoint.fileid === oldMount.mountPoint.fileid) === -1)\n  const deletedMounts = oldMounts.filter((oldMount) => archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === oldMount.mountPoint.fileid) === -1)\n  for (const mount of deletedMounts) {\n    const node = fileInfoToNode(mount.mountPoint)\n    node.attributes['is-mount-root'] = true\n\n    emit('files:node:deleted', node)\n  }\n  for (const mount of newMounts) {\n    const node = fileInfoToNode(mount.mountPoint)\n    node.attributes['is-mount-root'] = true\n\n    emit('files:node:created', node)\n  }\n}\n\nconst getJobIdFromOperation = (operation: string, archivePath: string, mountPath: string) => {\n  return md5(operation + archivePath + mountPath)\n}\n\nconst getJobIdFromJob = (job: ArchiveJob) => {\n  return getJobIdFromOperation(job.target, job.sourcePath, job.destinationPath)\n}\n\nconst getPendingJobs = async (fileName: string, silent?: boolean) => {\n  if (silent !== true) {\n    ++loading.value\n  }\n  fileName = encodeURIComponent(fileName)\n  const url = generateAppUrl('archive/schedule/{operation}/{fileName}', { operation: 'status', fileName })\n  try {\n    const response = await axios.get<ArchiveJob[]>(url)\n    const responseData = response.data\n    const jobs = {}\n    for (const job of responseData) {\n      jobs[getJobIdFromJob(job)] = job\n    }\n    for (const jobId of Object.keys(pendingJobs.value)) {\n      if (!jobs[jobId]) {\n        vueDel(pendingJobs.value, jobId)\n      }\n    }\n    for (const [jobId, job] of Object.entries(jobs)) {\n      vueSet(pendingJobs.value, jobId, job)\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (responseData.messages) {\n        for (const message of responseData.messages) {\n          showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n        }\n      }\n    }\n  }\n  if (silent !== true) {\n    --loading.value\n  }\n}\n\nconst cancelPendingOperation = async (operation: 'extract'|'mount') => {\n  const archivePath = encodeURIComponent(fileName.value!)\n  const mountPath = encodeURIComponent(archiveMountPathName.value)\n  const url = generateAppUrl(\n    'archive/schedule/{operation}/{archivePath}/{mountPath}',\n    {\n      operation,\n      archivePath,\n      mountPath,\n    },\n  )\n  let responseData: CancelJobResponse = {}\n  try {\n    const response = await axios.delete<CancelJobResponse>(url, {})\n    responseData = response.data\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        responseData = e.response.data as CancelJobResponse\n        if (Array.isArray(responseData.messages)) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(\n          t(appName, 'Cancelling the background job failed with error {status}, \"{statusText}\".', {\n            status: e.response.status,\n            statusText: e.response.statusText,\n          }),\n        )\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  if (responseData.removed) {\n    for (const job of responseData.removed) {\n      const jobId = getJobIdFromJob(job)\n      if (pendingJobs.value[jobId]) {\n        vueDel(pendingJobs.value, jobId)\n      }\n    }\n  }\n}\n\nconst getArchiveMounts = async (fileName: string, silent?: boolean) => {\n  const result: Omit<GetArchiveMountResponse, 'messages'> = {\n    mounts: [],\n    mounted: false,\n  }\n  if (silent !== true) {\n    ++loading.value\n  }\n  fileName = encodeURIComponent(fileName)\n  const url = generateAppUrl('archive/mount/{fileName}', { fileName })\n  try {\n    const response = await axios.get<GetArchiveMountResponse>(url)\n    const responseData = response.data\n    result.mounts = responseData.mounts\n    result.mounted = responseData.mounted\n    if (responseData.messages) {\n      for (const message of responseData.messages) {\n        showInfo(message)\n      }\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as GetArchiveMountResponse\n      result.mounts = responseData.mounts\n      result.mounted = responseData.mounted\n      if (responseData.messages) {\n        for (const message of responseData.messages) {\n          showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n        }\n      }\n    }\n  }\n  // id=\"fileList\"\n  // data-path\n  // data-file\n  for (const mount of result.mounts) {\n    // const pathComponents = mount.mountPointPath.split('/')\n    // const baseName = pathComponents.pop()\n    // const dirName = pathComponents.join('/')\n    // mount.baseName = baseName\n    // mount.dirName = dirName\n    if (!archivePassPhrase.value && mount.archivePassPhrase) {\n      archivePassPhrase.value = mount.archivePassPhrase\n    }\n    delete mount.archivePassPhrase\n  }\n  if (silent !== true) {\n    --loading.value\n  }\n  return result\n}\n\nconst mountArchive = async () => {\n  const archivePath = encodeURIComponent(fileName.value!)\n  const mountPath = encodeURIComponent(archiveMountPathName.value)\n  const urlTemplate = archiveMountBackgroundJob.value\n    ? 'archive/schedule/mount/{archivePath}/{mountPath}'\n    : 'archive/mount/{archivePath}/{mountPath}'\n  const url = generateAppUrl(urlTemplate, { archivePath, mountPath })\n  setBusyState(true)\n  const requestData: Record<string, string|boolean> = {}\n  if (archivePassPhrase.value) {\n    requestData.passPhrase = archivePassPhrase.value\n  }\n  requestData.stripCommonPathPrefix = !!archiveMountStripCommonPathPrefix.value\n  try {\n    const response = await axios.post<ArchiveMount>(url, requestData)\n    if (!archiveMountBackgroundJob.value) {\n      const newMount = response.data\n      const newFileId = newMount.mountPoint.fileid\n      if (archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === newFileId) === -1) {\n        archiveMounts.value.push(newMount)\n        const node = fileInfoToNode(response.data.mountPoint)\n        node.attributes['is-mount-root'] = true\n\n        emit('files:node:created', node)\n      }\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Mount request failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  if (archiveMountBackgroundJob.value) {\n    getPendingJobs(fileName.value!, true)\n  }\n  setBusyState(false)\n}\n\nconst unmount = async (mount: ArchiveMount) => {\n  const cloudUser = getCurrentUser()\n  const url = generateRemoteUrl('dav/files/' + cloudUser!.uid + mount.mountPointPath)\n  setBusyState(true)\n  try {\n    await axios.delete(url)\n    const mountIndex = archiveMounts.value.indexOf(mount)\n    if (mountIndex >= 0) {\n      archiveMounts.value.splice(mountIndex, 1)\n    } else {\n      logger.error('UNABLE TO FIND DELETED MOUNT IN LIST', mount, archiveMounts)\n    }\n    const node = fileInfoToNode(mount.mountPoint)\n    node.attributes['is-mount-root'] = true\n\n    emit('files:node:deleted', node)\n  } catch (e) {\n    logger.error('ERROR', e)\n    const messages: string[] = []\n    if (isAxiosErrorResponse(e)) {\n      // attempt parsing Sabre exception is available\n      const xml = (e.response.request as XMLHttpRequest)?.responseXML\n      if (xml && xml.documentElement.localName === 'error' && xml.documentElement.namespaceURI === 'DAV:') {\n        const xmlMessages = xml.getElementsByTagNameNS('http://sabredav.org/ns', 'message')\n        // const exceptions = xml.getElementsByTagNameNS('http://sabredav.org/ns', 'exception');\n        for (const message of xmlMessages) {\n          message.textContent && messages.push(message.textContent)\n        }\n      }\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Unmount request failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n      if (e.response.status === 404) {\n        refreshArchiveMounts(fileName.value!, true)\n      }\n    }\n  }\n  setBusyState(false)\n}\n\nconst extractArchive = async () => {\n  const archivePath = encodeURIComponent(fileName.value!)\n  const targetPath = encodeURIComponent(archiveExtractPathName.value)\n  const urlTemplate = archiveExtractBackgroundJob.value\n    ? 'archive/schedule/extract/{archivePath}/{targetPath}'\n    : 'archive/extract/{archivePath}/{targetPath}'\n  const url = generateAppUrl(urlTemplate, { archivePath, targetPath })\n  setBusyState(true)\n  const requestData: Record<string, string|boolean> = {}\n  if (archivePassPhrase.value) {\n    requestData.passPhrase = archivePassPhrase.value\n  }\n  requestData.stripCommonPathPrefix = !!archiveExtractStripCommonPathPrefix.value\n  try {\n    const response = await axios.post<{ targetFolder: FileInfoDTO }>(url, requestData)\n    if (!archiveExtractBackgroundJob.value) {\n      const node = fileInfoToNode(response.data.targetFolder)\n      node.attributes['is-mount-root'] = true\n\n      emit('files:node:created', node)\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Archive extraction failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  if (archiveExtractBackgroundJob.value) {\n    getPendingJobs(fileName.value!, true)\n  }\n  setBusyState(false)\n}\n\nconst setPassPhrase = async () => {\n  const newPassPhrase: string = showArchivePassPhrase.value\n    ? archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"text\"]')?.value || ''\n    : archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || ''\n  archivePassPhrase.value = newPassPhrase\n\n  // patch it into existing mounts if any\n  const archivePath = encodeURIComponent(fileName.value!)\n  const url = generateUrl('/apps/' + appName + '/archive/mount/{archivePath}', { archivePath })\n  setBusyState(true)\n  const requestData = {\n    changeSet: {\n      archivePassPhrase: archivePassPhrase.value,\n    },\n  }\n  try {\n    await axios.patch(url, requestData)\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Patching the passphrase failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  setBusyState(false)\n}\n\nconst togglePassPhraseVisibility = async () => {\n  // this is sooo complicated because the NC NcAction controls are\n  // seemingly only pro-forma vue-controls. There is no working\n  // v-model support, e.g.\n  let visibleElement = showArchivePassPhrase.value\n    ? archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"text\"]')!\n    : archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"password\"]')!\n  const currentValue: string = visibleElement.value\n\n  showArchivePassPhrase.value = !showArchivePassPhrase.value\n  await nextTick()\n\n  visibleElement = showArchivePassPhrase.value\n    ? archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"text\"]')!\n    : archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"password\"]')!\n  visibleElement.value = currentValue\n}\n\nconst filesAppMountPointUrl = (mountPoint: ArchiveMount) => {\n  return generateUrl('/apps/files') + '?dir=' + encodeURIComponent(mountPoint.mountPointPath)\n}\n\nconst onNotification = (event: NextcloudEvents['notifications:notification:received']) => {\n  if (event?.notification?.app !== appName) {\n    return\n  }\n  const destinationData = event?.notification?.messageRichParameters?.destination\n  if (destinationData?.status !== 'mount') {\n    return // nothing special ATM\n  }\n  const mountData = destinationData?.mount\n  if (!mountData) {\n    logger.error('No mount info in mount notification event')\n    return\n  }\n  let mount: ArchiveMountEntity\n  try {\n    mount = JSON.parse(mountData)\n  } catch (error) {\n    logger.error('files_archive, unable to decode mount entity', { event, mountData })\n    return\n  }\n  if (mount.archiveFileId !== archiveFileId.value) {\n    // not for us, in the future we may want to maintain a store\n    // and cache the data for all file-ids.\n    logger.info('*** Archive notification for other file received', event)\n    return\n  }\n  const jobId = getJobIdFromOperation('mount', mount.archiveFilePath, mount.mountPointPath)\n  if (pendingJobs.value[jobId]) {\n    delete pendingJobs.value[jobId]\n  }\n  logger.info('*** Mount notification received, updating mount-list', destinationData)\n  const mountFileId = destinationData.id\n  const mountIndex = archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === mountFileId)\n  if (mountIndex === -1) {\n    try {\n      archiveMounts.value.push({ ...mount, mountPoint: JSON.parse(destinationData.folder) })\n    } catch (error) {\n      logger.error('Unable to decode mount point folder file-info record.', { destinationData })\n    }\n  }\n}\n\nconst onMountPointRenamed = (mountPoint: Node) => {\n  // update the list of mountpoints\n  const mountFileId = mountPoint.fileid\n  const mountIndex = archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === mountFileId)\n  if (mountIndex >= 0) {\n    logger.info('BERFORE RENAME', { ...archiveMounts[mountIndex] })\n    vueSet(archiveMounts[mountIndex], 'mountPoint', mountPoint)\n    vueSet(archiveMounts[mountIndex], 'mountPointPath', mountPoint.path)\n    vueSet(archiveMounts[mountIndex], 'mountPointPathHash', md5(mountPoint.path))\n    logger.info('AFTER RENAME', { ...archiveMounts[mountIndex] })\n  } else {\n    logger.info('RENAME OF NODE NOT FOR US', mountPoint)\n  }\n}\n\nconst onMountPointDeleted = (mountPoint: Node) => {\n  const mountFileId = mountPoint.fileid\n  const mountIndex = archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === mountFileId)\n  if (mountIndex >= 0) {\n    archiveMounts.value.splice(mountIndex, 1)\n    logger.info('RECORD UNMOUNT', mountPoint)\n  } else {\n    logger.info('DELETE OF NODE NOT FOR US', {\n      mountPoint,\n      archiveMounts: archiveMounts.value,\n    })\n  }\n}\n\nonBeforeMount(() => {\n  subscribe('files:node:deleted', onMountPointDeleted)\n  subscribe('files:node:renamed', onMountPointRenamed)\n  subscribe('notifications:notification:received', onNotification)\n})\n\nonUnmounted(() => {\n  unsubscribe('files:node:deleted', onMountPointDeleted)\n  unsubscribe('files:node:renamed', onMountPointRenamed)\n  unsubscribe('notifications:notification:received', onNotification)\n})\n\n\nreturn { __sfc: true,archivePassPhraseComponent, mountOptionsComponent, extractionOptionsComponent, loading, fileInfo, fileName, archiveFileId, ArchiveStatusOk, ArchiveStatusTooLarge, ArchiveStatusBomb, archiveInfo, archiveStatus, archiveMounts, pendingJobs, jobsArePending, initialState, archiveMountStripCommonPathPrefix, archiveExtractStripCommonPathPrefix, archiveMountBackgroundJob, archiveExtractBackgroundJob, archivePassPhrase, showArchiveInfo, showArchivePassPhrase, showArchiveMounts, showArchiveExtraction, showPendingJobs, openMountTarget, archiveMountFileInfo, archiveExtractFileInfo, archiveMountBaseName, archiveMountDirName, archiveExtractBaseName, archiveExtractDirName, archiveMountPathName, archiveExtractPathName, archiveStatusText, archiveMounted, humanArchiveOriginalSize, humanArchiveCompressedSize, humanArchiveFileSize, numberOfArchiveMembers, commonPathPrefix, isLt, openMountOptionsMenu, openExtractionOptionsMenu, getData, update, getArchiveInfo, refreshArchiveMounts, getJobIdFromOperation, getJobIdFromJob, getPendingJobs, cancelPendingOperation, getArchiveMounts, mountArchive, unmount, extractArchive, setPassPhrase, togglePassPhraseVisibility, filesAppMountPointUrl, onNotification, onMountPointRenamed, onMountPointDeleted, appName, t, NetworkOffIcon, CancelIcon, NcActionInput, NcActionCheckbox, NcActions, NcActionButton, NcListItem, FilePrefixPicker }\n}\n\n})","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-6.use[1]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FilesTab.vue?vue&type=script&setup=true&lang=ts\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-6.use[1]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FilesTab.vue?vue&type=script&setup=true&lang=ts\"","<!--\n  - @author Claus-Justus Heine <himself@claus-justus-heine.de>\n  - @copyright 2022, 2023, 2024, 2025 Claus-Justus Heine\n  - @license AGPL-3.0-or-later\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program. If not, see <http://www.gnu.org/licenses/>.\n  -\n  -->\n<template>\n  <div class=\"files-tab\">\n    <ul>\n      <li class=\"files-tab-entry flex flex-center clickable\"\n          @click=\"showArchiveInfo = !showArchiveInfo\"\n      >\n        <div class=\"files-tab-entry__avatar icon-info-white\" />\n        <div class=\"files-tab-entry__desc\">\n          <h5>{{ t(appName, 'Archive Information') }}</h5>\n        </div>\n        <NcActions>\n          <NcActionButton v-model=\"showArchiveInfo\"\n                          :icon=\"'icon-triangle-' + (showArchiveInfo ? 'n' : 's')\"\n          />\n        </NcActions>\n      </li>\n      <li v-show=\"showArchiveInfo\" class=\"files-tab-entry\">\n        <div v-if=\"loading\" class=\"icon-loading-small\" />\n        <ul v-show=\"!loading\" class=\"archive-info\">\n          <NcListItem v-if=\"isLt(0, archiveStatus)\"\n                      :class=\"{ 'archive-error': isLt(0, archiveStatus) }\"\n                      :name=\"t(appName, 'archive status')\"\n                      :bold=\"true\"\n                      :details=\"archiveStatusText\"\n          >\n            <template #icon>\n              <div class=\"icon-error\" />\n            </template>\n          </NcListItem>\n          <NcListItem :name=\"t(appName, 'archive format')\"\n                      :bold=\"true\"\n                      :details=\"archiveInfo?.format || t(appName, 'unknown')\"\n                      compact\n          />\n          <NcListItem :name=\"t(appName, 'MIME type')\"\n                      :bold=\"true\"\n                      :details=\"archiveInfo?.mimeType || t(appName, 'unknown')\"\n                      compact\n          />\n          <NcListItem :name=\"t(appName, 'backend driver')\"\n                      :bold=\"true\"\n                      :details=\"archiveInfo?.backendDriver || t(appName, 'unknown')\"\n                      compact\n          />\n          <NcListItem :name=\"t(appName, 'uncompressed size')\"\n                      :bold=\"true\"\n                      :details=\"humanArchiveOriginalSize\"\n                      compact\n          />\n          <NcListItem :name=\"t(appName, 'compressed size')\"\n                      :bold=\"true\"\n                      :details=\"humanArchiveCompressedSize\"\n                      compact\n          />\n          <NcListItem v-if=\"humanArchiveCompressedSize !== humanArchiveFileSize\"\n                      :name=\"t(appName, 'archive file size')\"\n                      :bold=\"true\"\n                      :details=\"humanArchiveFileSize\"\n                      compact\n          />\n          <NcListItem :name=\"t(appName, '# archive members')\"\n                      :bold=\"true\"\n                      :details=\"numberOfArchiveMembers\"\n                      compact\n          />\n          <NcListItem :name=\"t(appName, 'common prefix')\"\n                      :bold=\"true\"\n                      :details=\"commonPathPrefix\"\n                      compact\n          />\n          <NcListItem v-if=\"archiveInfo?.comment\"\n                      class=\"archive-comment\"\n                      :name=\"t(appName, 'creator\\'s comment')\"\n                      :bold=\"true\"\n                      compact\n          >\n            <template #subtitle>\n              {{ archiveInfo?.comment }}\n            </template>\n          </NcListItem>\n        </ul>\n      </li>\n      <li class=\"files-tab-entry flex flex-center\">\n        <div class=\"files-tab-entry__avatar icon-password-white\" />\n        <div class=\"files-tab-entry__desc\">\n          <h5>\n            <span class=\"main-title\">{{ t(appName, 'Passphrase') }}</span>\n            <span v-if=\"!archivePassPhrase\" class=\"title-annotation\">({{ t(appName, 'unset') }})</span>\n          </h5>\n        </div>\n        <NcActions :force-menu=\"true\">\n          <NcActionInput v-if=\"showArchivePassPhrase\"\n                         ref=\"archivePassPhraseComponent\"\n                         :value=\"archivePassPhrase\"\n                         type=\"text\"\n                         icon=\"icon-password\"\n                         @submit=\"setPassPhrase\"\n          >\n            {{ t(appName, 'archive passphrase') }}\n          </NcActionInput>\n          <NcActionInput v-else\n                         ref=\"archivePassPhraseComponent\"\n                         :value=\"archivePassPhrase\"\n                         type=\"password\"\n                         icon=\"icon-password\"\n                         @submit=\"setPassPhrase\"\n          >\n            {{ t(appName, 'archive passphrase') }}\n          </NcActionInput>\n          <NcActionCheckbox @change=\"togglePassPhraseVisibility\">\n            {{ t(appName, 'Show Passphrase') }}\n          </NcActionCheckbox>\n        </NcActions>\n      </li>\n      <li class=\"files-tab-entry flex flex-center clickable\"\n          @click=\"showArchiveMounts = !showArchiveMounts\"\n      >\n        <div class=\"files-tab-entry__avatar icon-external-white\" />\n        <div class=\"files-tab-entry__desc\">\n          <h5>\n            <span class=\"main-title\">{{ t(appName, 'Mount Points') }}</span>\n            <span v-if=\"archiveMounted\" class=\"title-annotation\">({{ '' + archiveMounts.length }})</span>\n            <span v-else class=\"title-annotation\">({{ t(appName, 'not mounted') }})</span>\n          </h5>\n        </div>\n        <NcActions>\n          <NcActionButton v-model=\"showArchiveMounts\"\n                          :icon=\"'icon-triangle-' + (showArchiveMounts ? 'n' : 's')\"\n          />\n        </NcActions>\n      </li>\n      <li v-show=\"showArchiveMounts\" class=\"directory-chooser files-tab-entry\">\n        <div v-if=\"loading\" class=\"icon-loading-small\" />\n        <ul v-else-if=\"archiveMounted\" class=\"archive-mounts\">\n          <NcListItem v-for=\"mountPoint in archiveMounts\"\n                      :key=\"mountPoint.id\"\n                      :force-display-actions=\"true\"\n                      :bold=\"false\"\n          >\n            <template #title>\n              <a v-tooltip=\"mountPoint.mountPointPath\"\n                 class=\"external icon-folder icon\"\n                 :target=\"openMountTarget\"\n                 :href=\"filesAppMountPointUrl(mountPoint)\"\n              >\n                {{ mountPoint.mountPointPath }}\n              </a>\n            </template>\n            <template #actions>\n              <NcActionButton @click=\"unmount(mountPoint)\">\n                <template #icon>\n                  <NetworkOffIcon v-tooltip=\"t(appName, 'Disconnect storage')\"\n                                  :size=\"20\"\n                  />\n                </template>\n              </NcActionButton>\n            </template>\n            <template v-if=\"mountPoint.mountFlags & 1\" #extra>\n              <div>{{ t(appName, 'Common prefix {prefix} is stripped.', { prefix: commonPathPrefix }) }}</div>\n            </template>\n          </NcListItem>\n        </ul>\n        <div v-else>\n          <FilePrefixPicker v-model=\"archiveMountFileInfo\"\n                            :hint=\"t(appName, 'Not mounted, create a new mount point:')\"\n                            :placeholder=\"t(appName, 'base name')\"\n                            @submit=\"mountArchive\"\n          />\n          <div class=\"flex flex-center\">\n            <div class=\"label\"\n                 @click=\"openMountOptionsMenu\"\n            >\n              {{ t(appName, 'Mount Options') }}\n            </div>\n            <NcActions ref=\"mountOptionsComponent\"\n                       :force-menu=\"true\"\n            >\n              <NcActionCheckbox ref=\"mountStripCommonPathPrefixComponent\"\n                                :checked=\"archiveMountStripCommonPathPrefix\"\n                                @change=\"archiveMountStripCommonPathPrefix = !archiveMountStripCommonPathPrefix\"\n              >\n                {{ t(appName, 'strip common path prefix') }}\n              </NcActionCheckbox>\n              <NcActionCheckbox ref=\"mountBackgroundJobComponent\"\n                                :checked=\"archiveMountBackgroundJob\"\n                                @change=\"archiveMountBackgroundJob = !archiveMountBackgroundJob\"\n              >\n                {{ t(appName, 'schedule as background job') }}\n              </NcActionCheckbox>\n            </NcActions>\n          </div>\n        </div>\n      </li>\n      <li class=\"files-tab-entry flex flex-center clickable\"\n          @click=\"showArchiveExtraction = !showArchiveExtraction\"\n      >\n        <div class=\"files-tab-entry__avatar icon-play-white\" />\n        <div class=\"files-tab-entry__desc\">\n          <h5>{{ t(appName, 'Extract Archive') }}</h5>\n        </div>\n        <NcActions>\n          <NcActionButton v-model=\"showArchiveExtraction\"\n                          :icon=\"'icon-triangle-' + (showArchiveExtraction ? 'n' : 's')\"\n          />\n        </NcActions>\n      </li>\n      <li v-show=\"showArchiveExtraction\" class=\"directory-chooser files-tab-entry\">\n        <div v-if=\"loading\" class=\"icon-loading-small\" />\n        <div v-else>\n          <FilePrefixPicker v-model=\"archiveExtractFileInfo\"\n                            :hint=\"t(appName, 'Choose a directory to extract the archive to:')\"\n                            :placeholder=\"t(appName, 'basename')\"\n                            @submit=\"extractArchive\"\n          />\n          <div class=\"flex flex-center\">\n            <div class=\"label\"\n                 @click=\"openExtractionOptionsMenu\"\n            >\n              {{ t(appName, 'Extraction Options') }}\n            </div>\n            <NcActions ref=\"extractionOptionsComponent\"\n                       :force-menu=\"true\"\n            >\n              <NcActionCheckbox :checked=\"archiveExtractStripCommonPathPrefix\"\n                                @change=\"archiveExtractStripCommonPathPrefix = !archiveExtractStripCommonPathPrefix\"\n              >\n                {{ t(appName, 'strip common path prefix') }}\n              </NcActionCheckbox>\n              <NcActionCheckbox ref=\"extractBackgroundJobComponent\"\n                                :checked=\"archiveExtractBackgroundJob\"\n                                @change=\"archiveExtractBackgroundJob = !archiveExtractBackgroundJob\"\n              >\n                {{ t(appName, 'schedule as background job') }}\n              </NcActionCheckbox>\n            </NcActions>\n          </div>\n        </div>\n      </li>\n      <li class=\"files-tab-entry flex flex-center clickable\"\n          @click=\"showPendingJobs = !showPendingJobs\"\n      >\n        <div class=\"files-tab-entry__avatar icon-recent-white\" />\n        <div class=\"files-tab-entry__desc\">\n          <h5 v-if=\"jobsArePending\">\n            <span class=\"main-title\">{{ t(appName, 'Pending Background Jobs') }}</span>\n            <span v-if=\"jobsArePending\" class=\"title-annotation\">({{ '' + Object.keys(pendingJobs).length }})</span>\n          </h5>\n          <h5 v-else>\n            <span class=\"main-title\">{{ t(appName, 'No Pending Background Jobs') }}</span>\n          </h5>\n        </div>\n        <NcActions>\n          <NcActionButton v-model=\"showPendingJobs\"\n                          :icon=\"'icon-triangle-' + (showPendingJobs ? 'n' : 's')\"\n          />\n        </NcActions>\n      </li>\n      <li v-show=\"jobsArePending && showPendingJobs\" class=\"directory-chooser files-tab-entry\">\n        <div v-if=\"loading\" class=\"icon-loading-small\" />\n        <ul v-else-if=\"jobsArePending\" class=\"pending-jobs\">\n          <NcListItem v-for=\"job in pendingJobs\"\n                      :key=\"job.destinationPath\"\n                      :force-display-actions=\"true\"\n                      :bold=\"false\"\n          >\n            <template #title>\n              <div>{{ job.destinationPath }}</div>\n            </template>\n            <template #actions>\n              <NcActionButton @click=\"cancelPendingOperation(job.target)\">\n                <template #icon>\n                  <CancelIcon v-tooltip=\"t(appName, 'Cancel Job')\"\n                              :size=\"20\"\n                  />\n                </template>\n              </NcActionButton>\n            </template>\n            <template v-if=\"job.stripCommonPathPrefix\" #extra>\n              <div>{{ t(appName, 'Job type: {type}', {type: job.target === 'mount' ? t(appName, 'mount') : t(appName, 'extract')}) }}</div>\n              <div>{{ t(appName, 'Common prefix {prefix} will be stripped.', { prefix: commonPathPrefix }) }}</div>\n            </template>\n          </NcListItem>\n        </ul>\n        <div v-else>\n          {{ t(appName, 'No pending background job.') }}\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { appName } from '../config.ts'\nimport {\n  computed,\n  reactive,\n  ref,\n  set as vueSet,\n  del as vueDel,\n  onBeforeMount,\n  onUnmounted,\n  nextTick,\n} from 'vue'\nimport getInitialState from '../toolkit/util/initial-state.ts'\nimport { generateUrl, generateRemoteUrl } from '@nextcloud/router'\nimport { emit, subscribe, unsubscribe } from '@nextcloud/event-bus'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport generateAppUrl from '../toolkit/util/generate-url.ts'\nimport { fileInfoToNode } from '../toolkit/util/file-node-helper.ts'\nimport type { FileInfoDTO } from '../toolkit/util/file-node-helper.ts'\nimport { md5 } from 'js-md5'\nimport { showError, showInfo, TOAST_PERMANENT_TIMEOUT } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\nimport NetworkOffIcon from 'vue-material-design-icons/NetworkOff.vue'\nimport CancelIcon from 'vue-material-design-icons/Cancel.vue'\nimport { formatFileSize } from '@nextcloud/files'\nimport {\n  NcActionInput,\n  NcActionCheckbox,\n  NcActions,\n  NcActionButton,\n  NcListItem,\n} from '@nextcloud/vue'\nimport FilePrefixPicker from '@rotdrop/nextcloud-vue-components/lib/components/FilePrefixPicker.vue'\nimport axios from '@nextcloud/axios'\nimport type { LegacyFileInfo, Node } from '@nextcloud/files'\nimport { isAxiosErrorResponse } from '../toolkit/types/axios-type-guards.ts'\nimport type { NextcloudEvents } from '@nextcloud/event-bus'\nimport type {\n  ArchiveMount,\n  ArchiveMountEntity,\n  GetArchiveMountResponse,\n} from '../model/archive-mount.d.ts'\nimport { setSidebarNodeBusy as setBusyState } from '../toolkit/util/nextcloud-sidebar-root.ts'\nimport logger from '../console.ts'\nimport type { InitialState } from '../types/initial-state.d.ts'\n\ninterface ArchiveInfo {\n  commonPathPrefix: string,\n  compressedSize: number,\n  defaultMountPoint: string,\n  defaultTargetBaseName: string,\n  numberOfFiles: number,\n  originalSize: number,\n  size: number,\n  format: string,\n  mimeType: string,\n  backendDriver: string,\n  comment?: string,\n}\n\ninterface ArchiveJob {\n  target: 'mount'|'extract',\n  userId: string,\n  sourceId: number,\n  sourcePath: string,\n  destinationPath: string,\n  archivePassphrase?: string,\n  stripCommonPathPrefix: boolean,\n  needsAuthentication: boolean,\n  authToken: string,\n}\n\nsetBusyState(false) // needs to be done once while in setup mode\n\nconst archivePassPhraseComponent = ref<null|typeof NcActionInput>(null)\nconst mountOptionsComponent = ref<null|typeof NcActions>(null)\nconst extractionOptionsComponent = ref<null|typeof NcActions>(null)\n\nconst loading = ref(0)\n\nconst fileInfo = ref<undefined|LegacyFileInfo>(undefined)\nconst fileName = computed(() => fileInfo.value ? fileInfo.value.path + '/' + fileInfo.value.name : null)\nconst archiveFileId = computed(() => fileInfo.value?.id)\n\nconst ArchiveStatusOk = 0\nconst ArchiveStatusTooLarge = 1\nconst ArchiveStatusBomb = 2\n\nconst archiveInfo = ref<undefined|ArchiveInfo>(undefined)\nconst archiveStatus = ref<undefined|number>(undefined)\n\nconst archiveMounts = ref<ArchiveMount[]>([])\n\nconst pendingJobs = ref<Record<string, ArchiveJob> >({})\nconst jobsArePending = computed(() => Object.keys(pendingJobs.value).length > 0)\n\nconst initialState = getInitialState<InitialState>()\n\nconst archiveMountStripCommonPathPrefix = ref(!!initialState?.mountStripCommonPathPrefixDefault)\nconst archiveExtractStripCommonPathPrefix = ref(!!initialState?.extractStripCommonPathPrefixDefault)\nconst archiveMountBackgroundJob = ref(!!initialState?.mountBackgroundJob)\nconst archiveExtractBackgroundJob = ref(!!initialState?.extractBackgroundJob)\nconst archivePassPhrase = ref<undefined|string>(undefined)\n\nconst showArchiveInfo = ref(true)\nconst showArchivePassPhrase = ref(false)\nconst showArchiveMounts = ref(false)\nconst showArchiveExtraction = ref(false)\nconst showPendingJobs = ref(false)\nconst openMountTarget = computed(() => md5(generateUrl('') + appName + '-open-archive-mount'))\n\nconst archiveMountFileInfo = reactive({\n  dirName: '',\n  baseName: '',\n})\n\nconst archiveExtractFileInfo = reactive({\n  dirName: '',\n  baseName: '',\n})\n\nconst archiveMountBaseName = computed({\n  get() {\n    return archiveMountFileInfo.baseName\n  },\n  set(value) {\n    vueSet(archiveMountFileInfo, 'baseName', value)\n    return value\n  },\n})\n\nconst archiveMountDirName = computed({\n  get() {\n    return archiveMountFileInfo.dirName\n  },\n  set(value) {\n    vueSet(archiveMountFileInfo, 'dirName', value)\n    return value\n  },\n})\n\nconst archiveExtractBaseName = computed({\n  get() {\n    return archiveExtractFileInfo.baseName\n  },\n  set(value) {\n    vueSet(archiveExtractFileInfo, 'baseName', value)\n    return value\n  },\n})\n\nconst archiveExtractDirName = computed({\n  get() {\n    return archiveExtractFileInfo.dirName\n  },\n  set(value) {\n    vueSet(archiveExtractFileInfo, 'dirName', value)\n    return value\n  },\n})\n\nconst archiveMountPathName = computed(() => archiveMountDirName.value + (archiveMountBaseName.value ? '/' + archiveMountBaseName.value : ''))\nconst archiveExtractPathName = computed(() => archiveExtractDirName.value + (archiveExtractBaseName.value ? '/' + archiveExtractBaseName.value : ''))\n\nconst archiveStatusText = computed(() => {\n  if (archiveStatus.value! === ArchiveStatusOk) {\n    return t(appName, 'ok')\n  } else if (archiveStatus.value! & ArchiveStatusBomb) {\n    return t(appName, 'zip bomb')\n  } else if (archiveStatus.value! & ArchiveStatusTooLarge) {\n    return t(appName, 'too large')\n  }\n  return t(appName, 'unknown')\n})\n\n// const archiveFileDirName = computed(() => fileInfo.value?.path)\n// const archiveFileBaseName = computed(() => fileInfo.value?.name)\n// const archiveFilePathName = computed(() => fileInfo.value?.path + '/' + fileInfo.value?.name)\nconst archiveMounted = computed(() => archiveMounts.value.length > 0)\n// const archiveInfoText = computed(() => JSON.stringify(archiveInfo.value, null, 2))\nconst humanArchiveOriginalSize = computed(() =>\n  !isNaN(parseInt('' + archiveInfo.value?.originalSize))\n    ? formatFileSize(archiveInfo.value!.originalSize)\n    : t(appName, 'unknown'),\n)\nconst humanArchiveCompressedSize = computed(() =>\n  !isNaN(parseInt('' + archiveInfo.value?.compressedSize))\n    ? formatFileSize(archiveInfo.value!.compressedSize)\n    : t(appName, 'unknown'),\n)\nconst humanArchiveFileSize = computed(() =>\n  !isNaN(parseInt('' + archiveInfo.value?.size))\n    ? formatFileSize(archiveInfo.value!.size)\n    : t(appName, 'unknown'),\n)\nconst numberOfArchiveMembers = computed(() => {\n  if (!archiveInfo.value\n      || archiveInfo.value?.numberOfFiles === undefined\n      || isNaN(parseInt('' + archiveInfo.value?.numberOfFiles))) {\n    return t(appName, 'unknown')\n  }\n  return '' + archiveInfo.value?.numberOfFiles\n})\nconst commonPathPrefix = computed(() =>\n  !archiveInfo.value\n    || archiveInfo.value.commonPathPrefix === undefined\n    ? t(appName, 'unknown')\n    : '/' + archiveInfo.value.commonPathPrefix,\n)\n// const mountPointTitle = computed(() =>\n//   t(appName, 'Mount Points')\n//     + ' ('\n//     + (archiveMounted ? archiveMounts.value.length : t(appName, 'not mounted'))\n//     + ')'\n// )\n\n// We ____DO____  want to compare numerically here.\nconst isLt = (a: null|undefined|number, b: null|undefined|number) => a! < b!\n\nconst openMountOptionsMenu = () => {\n  mountOptionsComponent.value?.openMenu()\n}\n\nconst openExtractionOptionsMenu = () => {\n  extractionOptionsComponent.value?.openMenu()\n}\n\n/**\n * Fetch some needed data ...\n */\nconst getData = async () => {\n  archiveMountStripCommonPathPrefix.value = !!initialState?.mountStripCommonPathPrefixDefault\n  archiveExtractStripCommonPathPrefix.value = !!initialState?.extractStripCommonPathPrefixDefault\n  archiveMountBackgroundJob.value = !!initialState?.mountBackgroundJob\n  archiveExtractBackgroundJob.value = !!initialState?.extractBackgroundJob\n\n  if (!fileName.value) {\n    return\n  }\n\n  getArchiveInfo(fileName.value)\n  refreshArchiveMounts(fileName.value, true)\n  getPendingJobs(fileName.value, true)\n}\n\n/**\n * Update current fileInfo and fetch new data\n * @param newFileInfo the current file FileInfo\n */\nconst update = async (newFileInfo: LegacyFileInfo) => {\n  fileInfo.value = newFileInfo\n\n  /* this.fileList = OCA.Files.App.currentFileList\n   * this.fileList.$el.off('updated').on('updated', function(event) {\n   *   logger.info('FILE LIST UPDATED, ARGS', arguments)\n   * }) */\n  archiveMountBaseName.value = fileInfo.value.name.split('.')[0]\n  archiveMountDirName.value = fileInfo.value.path\n\n  archiveExtractBaseName.value = archiveMountBaseName.value\n  archiveExtractDirName.value = archiveMountDirName.value\n\n  getData()\n}\n\ndefineExpose({ update })\n\ninterface ArchiveInfoResponse {\n  messages: string[],\n  archiveStatus: number, //\n  archiveInfo: ArchiveInfo,\n}\n\nconst getArchiveInfo = async (fileName: string) => {\n  ++loading.value\n  fileName = encodeURIComponent(fileName)\n  const url = generateAppUrl('archive/info/{fileName}', { fileName })\n  const requestData: Record<string, string> = {}\n  if (archivePassPhrase.value) {\n    requestData.passPhrase = archivePassPhrase.value\n  }\n  try {\n    const response = await axios.post<ArchiveInfoResponse>(url, requestData)\n    const responseData = response.data\n    archiveInfo.value = responseData.archiveInfo\n    archiveStatus.value = responseData.archiveStatus\n    if (responseData.messages) {\n      for (const message of responseData.messages) {\n        showInfo(message)\n      }\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as ArchiveInfoResponse\n      archiveInfo.value = responseData.archiveInfo\n      archiveStatus.value = responseData.archiveStatus\n      if (responseData.messages) {\n        for (const message of responseData.messages) {\n          showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n        }\n      }\n    } else {\n      archiveInfo.value = undefined\n    }\n  }\n  if (archiveInfo.value?.defaultMountPoint) {\n    archiveMountBaseName.value = archiveInfo.value.defaultMountPoint\n  }\n  if (archiveInfo.value?.defaultTargetBaseName) {\n    archiveExtractBaseName.value = archiveInfo.value.defaultTargetBaseName\n  }\n  --loading.value\n}\n\nconst refreshArchiveMounts = async (filename: string, noEmit?: boolean) => {\n  const oldMounts = [...archiveMounts.value]\n  const mounts = await getArchiveMounts(filename, false)\n  archiveMounts.value = mounts.mounts\n  if (noEmit) {\n    // do no emit birth during initialization\n    return\n  }\n  // emit birth and death signals as needed, in order to update\n  // the frontend file-listing. The computational effort is\n  // quadratic, but we are talking here about the common case that\n  // there is only a single mount -- or by accident another\n  // one. So what.\n  const newMounts = archiveMounts.value.filter((mount) => oldMounts.findIndex((oldMount) => mount.mountPoint.fileid === oldMount.mountPoint.fileid) === -1)\n  const deletedMounts = oldMounts.filter((oldMount) => archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === oldMount.mountPoint.fileid) === -1)\n  for (const mount of deletedMounts) {\n    const node = fileInfoToNode(mount.mountPoint)\n    node.attributes['is-mount-root'] = true\n\n    emit('files:node:deleted', node)\n  }\n  for (const mount of newMounts) {\n    const node = fileInfoToNode(mount.mountPoint)\n    node.attributes['is-mount-root'] = true\n\n    emit('files:node:created', node)\n  }\n}\n\nconst getJobIdFromOperation = (operation: string, archivePath: string, mountPath: string) => {\n  return md5(operation + archivePath + mountPath)\n}\n\nconst getJobIdFromJob = (job: ArchiveJob) => {\n  return getJobIdFromOperation(job.target, job.sourcePath, job.destinationPath)\n}\n\nconst getPendingJobs = async (fileName: string, silent?: boolean) => {\n  if (silent !== true) {\n    ++loading.value\n  }\n  fileName = encodeURIComponent(fileName)\n  const url = generateAppUrl('archive/schedule/{operation}/{fileName}', { operation: 'status', fileName })\n  try {\n    const response = await axios.get<ArchiveJob[]>(url)\n    const responseData = response.data\n    const jobs = {}\n    for (const job of responseData) {\n      jobs[getJobIdFromJob(job)] = job\n    }\n    for (const jobId of Object.keys(pendingJobs.value)) {\n      if (!jobs[jobId]) {\n        vueDel(pendingJobs.value, jobId)\n      }\n    }\n    for (const [jobId, job] of Object.entries(jobs)) {\n      vueSet(pendingJobs.value, jobId, job)\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (responseData.messages) {\n        for (const message of responseData.messages) {\n          showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n        }\n      }\n    }\n  }\n  if (silent !== true) {\n    --loading.value\n  }\n}\n\ninterface CancelJobResponse {\n  removed?: ArchiveJob[],\n  messages?: string[],\n}\n\nconst cancelPendingOperation = async (operation: 'extract'|'mount') => {\n  const archivePath = encodeURIComponent(fileName.value!)\n  const mountPath = encodeURIComponent(archiveMountPathName.value)\n  const url = generateAppUrl(\n    'archive/schedule/{operation}/{archivePath}/{mountPath}',\n    {\n      operation,\n      archivePath,\n      mountPath,\n    },\n  )\n  let responseData: CancelJobResponse = {}\n  try {\n    const response = await axios.delete<CancelJobResponse>(url, {})\n    responseData = response.data\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        responseData = e.response.data as CancelJobResponse\n        if (Array.isArray(responseData.messages)) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(\n          t(appName, 'Cancelling the background job failed with error {status}, \"{statusText}\".', {\n            status: e.response.status,\n            statusText: e.response.statusText,\n          }),\n        )\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  if (responseData.removed) {\n    for (const job of responseData.removed) {\n      const jobId = getJobIdFromJob(job)\n      if (pendingJobs.value[jobId]) {\n        vueDel(pendingJobs.value, jobId)\n      }\n    }\n  }\n}\n\nconst getArchiveMounts = async (fileName: string, silent?: boolean) => {\n  const result: Omit<GetArchiveMountResponse, 'messages'> = {\n    mounts: [],\n    mounted: false,\n  }\n  if (silent !== true) {\n    ++loading.value\n  }\n  fileName = encodeURIComponent(fileName)\n  const url = generateAppUrl('archive/mount/{fileName}', { fileName })\n  try {\n    const response = await axios.get<GetArchiveMountResponse>(url)\n    const responseData = response.data\n    result.mounts = responseData.mounts\n    result.mounted = responseData.mounted\n    if (responseData.messages) {\n      for (const message of responseData.messages) {\n        showInfo(message)\n      }\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as GetArchiveMountResponse\n      result.mounts = responseData.mounts\n      result.mounted = responseData.mounted\n      if (responseData.messages) {\n        for (const message of responseData.messages) {\n          showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n        }\n      }\n    }\n  }\n  // id=\"fileList\"\n  // data-path\n  // data-file\n  for (const mount of result.mounts) {\n    // const pathComponents = mount.mountPointPath.split('/')\n    // const baseName = pathComponents.pop()\n    // const dirName = pathComponents.join('/')\n    // mount.baseName = baseName\n    // mount.dirName = dirName\n    if (!archivePassPhrase.value && mount.archivePassPhrase) {\n      archivePassPhrase.value = mount.archivePassPhrase\n    }\n    delete mount.archivePassPhrase\n  }\n  if (silent !== true) {\n    --loading.value\n  }\n  return result\n}\n\nconst mountArchive = async () => {\n  const archivePath = encodeURIComponent(fileName.value!)\n  const mountPath = encodeURIComponent(archiveMountPathName.value)\n  const urlTemplate = archiveMountBackgroundJob.value\n    ? 'archive/schedule/mount/{archivePath}/{mountPath}'\n    : 'archive/mount/{archivePath}/{mountPath}'\n  const url = generateAppUrl(urlTemplate, { archivePath, mountPath })\n  setBusyState(true)\n  const requestData: Record<string, string|boolean> = {}\n  if (archivePassPhrase.value) {\n    requestData.passPhrase = archivePassPhrase.value\n  }\n  requestData.stripCommonPathPrefix = !!archiveMountStripCommonPathPrefix.value\n  try {\n    const response = await axios.post<ArchiveMount>(url, requestData)\n    if (!archiveMountBackgroundJob.value) {\n      const newMount = response.data\n      const newFileId = newMount.mountPoint.fileid\n      if (archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === newFileId) === -1) {\n        archiveMounts.value.push(newMount)\n        const node = fileInfoToNode(response.data.mountPoint)\n        node.attributes['is-mount-root'] = true\n\n        emit('files:node:created', node)\n      }\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Mount request failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  if (archiveMountBackgroundJob.value) {\n    getPendingJobs(fileName.value!, true)\n  }\n  setBusyState(false)\n}\n\nconst unmount = async (mount: ArchiveMount) => {\n  const cloudUser = getCurrentUser()\n  const url = generateRemoteUrl('dav/files/' + cloudUser!.uid + mount.mountPointPath)\n  setBusyState(true)\n  try {\n    await axios.delete(url)\n    const mountIndex = archiveMounts.value.indexOf(mount)\n    if (mountIndex >= 0) {\n      archiveMounts.value.splice(mountIndex, 1)\n    } else {\n      logger.error('UNABLE TO FIND DELETED MOUNT IN LIST', mount, archiveMounts)\n    }\n    const node = fileInfoToNode(mount.mountPoint)\n    node.attributes['is-mount-root'] = true\n\n    emit('files:node:deleted', node)\n  } catch (e) {\n    logger.error('ERROR', e)\n    const messages: string[] = []\n    if (isAxiosErrorResponse(e)) {\n      // attempt parsing Sabre exception is available\n      const xml = (e.response.request as XMLHttpRequest)?.responseXML\n      if (xml && xml.documentElement.localName === 'error' && xml.documentElement.namespaceURI === 'DAV:') {\n        const xmlMessages = xml.getElementsByTagNameNS('http://sabredav.org/ns', 'message')\n        // const exceptions = xml.getElementsByTagNameNS('http://sabredav.org/ns', 'exception');\n        for (const message of xmlMessages) {\n          message.textContent && messages.push(message.textContent)\n        }\n      }\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Unmount request failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n      if (e.response.status === 404) {\n        refreshArchiveMounts(fileName.value!, true)\n      }\n    }\n  }\n  setBusyState(false)\n}\n\nconst extractArchive = async () => {\n  const archivePath = encodeURIComponent(fileName.value!)\n  const targetPath = encodeURIComponent(archiveExtractPathName.value)\n  const urlTemplate = archiveExtractBackgroundJob.value\n    ? 'archive/schedule/extract/{archivePath}/{targetPath}'\n    : 'archive/extract/{archivePath}/{targetPath}'\n  const url = generateAppUrl(urlTemplate, { archivePath, targetPath })\n  setBusyState(true)\n  const requestData: Record<string, string|boolean> = {}\n  if (archivePassPhrase.value) {\n    requestData.passPhrase = archivePassPhrase.value\n  }\n  requestData.stripCommonPathPrefix = !!archiveExtractStripCommonPathPrefix.value\n  try {\n    const response = await axios.post<{ targetFolder: FileInfoDTO }>(url, requestData)\n    if (!archiveExtractBackgroundJob.value) {\n      const node = fileInfoToNode(response.data.targetFolder)\n      node.attributes['is-mount-root'] = true\n\n      emit('files:node:created', node)\n    }\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Archive extraction failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  if (archiveExtractBackgroundJob.value) {\n    getPendingJobs(fileName.value!, true)\n  }\n  setBusyState(false)\n}\n\nconst setPassPhrase = async () => {\n  const newPassPhrase: string = showArchivePassPhrase.value\n    ? archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"text\"]')?.value || ''\n    : archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || ''\n  archivePassPhrase.value = newPassPhrase\n\n  // patch it into existing mounts if any\n  const archivePath = encodeURIComponent(fileName.value!)\n  const url = generateUrl('/apps/' + appName + '/archive/mount/{archivePath}', { archivePath })\n  setBusyState(true)\n  const requestData = {\n    changeSet: {\n      archivePassPhrase: archivePassPhrase.value,\n    },\n  }\n  try {\n    await axios.patch(url, requestData)\n  } catch (e) {\n    logger.error('ERROR', e)\n    if (isAxiosErrorResponse(e)) {\n      const messages: string[] = []\n      if (e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (responseData.messages) {\n          messages.splice(messages.length, 0, ...responseData.messages)\n        }\n      }\n      if (!messages.length) {\n        messages.push(t(appName, 'Patching the passphrase failed with error {status}, \"{statusText}\".', {\n          status: e.response.status,\n          statusText: e.response.statusText,\n        }))\n      }\n      for (const message of messages) {\n        showError(message, { timeout: TOAST_PERMANENT_TIMEOUT })\n      }\n    }\n  }\n  setBusyState(false)\n}\n\nconst togglePassPhraseVisibility = async () => {\n  // this is sooo complicated because the NC NcAction controls are\n  // seemingly only pro-forma vue-controls. There is no working\n  // v-model support, e.g.\n  let visibleElement = showArchivePassPhrase.value\n    ? archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"text\"]')!\n    : archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"password\"]')!\n  const currentValue: string = visibleElement.value\n\n  showArchivePassPhrase.value = !showArchivePassPhrase.value\n  await nextTick()\n\n  visibleElement = showArchivePassPhrase.value\n    ? archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"text\"]')!\n    : archivePassPhraseComponent.value!.$el.querySelector<HTMLInputElement>('input[type=\"password\"]')!\n  visibleElement.value = currentValue\n}\n\nconst filesAppMountPointUrl = (mountPoint: ArchiveMount) => {\n  return generateUrl('/apps/files') + '?dir=' + encodeURIComponent(mountPoint.mountPointPath)\n}\n\nconst onNotification = (event: NextcloudEvents['notifications:notification:received']) => {\n  if (event?.notification?.app !== appName) {\n    return\n  }\n  const destinationData = event?.notification?.messageRichParameters?.destination\n  if (destinationData?.status !== 'mount') {\n    return // nothing special ATM\n  }\n  const mountData = destinationData?.mount\n  if (!mountData) {\n    logger.error('No mount info in mount notification event')\n    return\n  }\n  let mount: ArchiveMountEntity\n  try {\n    mount = JSON.parse(mountData)\n  } catch (error) {\n    logger.error('files_archive, unable to decode mount entity', { event, mountData })\n    return\n  }\n  if (mount.archiveFileId !== archiveFileId.value) {\n    // not for us, in the future we may want to maintain a store\n    // and cache the data for all file-ids.\n    logger.info('*** Archive notification for other file received', event)\n    return\n  }\n  const jobId = getJobIdFromOperation('mount', mount.archiveFilePath, mount.mountPointPath)\n  if (pendingJobs.value[jobId]) {\n    delete pendingJobs.value[jobId]\n  }\n  logger.info('*** Mount notification received, updating mount-list', destinationData)\n  const mountFileId = destinationData.id\n  const mountIndex = archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === mountFileId)\n  if (mountIndex === -1) {\n    try {\n      archiveMounts.value.push({ ...mount, mountPoint: JSON.parse(destinationData.folder) })\n    } catch (error) {\n      logger.error('Unable to decode mount point folder file-info record.', { destinationData })\n    }\n  }\n}\n\nconst onMountPointRenamed = (mountPoint: Node) => {\n  // update the list of mountpoints\n  const mountFileId = mountPoint.fileid\n  const mountIndex = archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === mountFileId)\n  if (mountIndex >= 0) {\n    logger.info('BERFORE RENAME', { ...archiveMounts[mountIndex] })\n    vueSet(archiveMounts[mountIndex], 'mountPoint', mountPoint)\n    vueSet(archiveMounts[mountIndex], 'mountPointPath', mountPoint.path)\n    vueSet(archiveMounts[mountIndex], 'mountPointPathHash', md5(mountPoint.path))\n    logger.info('AFTER RENAME', { ...archiveMounts[mountIndex] })\n  } else {\n    logger.info('RENAME OF NODE NOT FOR US', mountPoint)\n  }\n}\n\nconst onMountPointDeleted = (mountPoint: Node) => {\n  const mountFileId = mountPoint.fileid\n  const mountIndex = archiveMounts.value.findIndex((mount) => mount.mountPoint.fileid === mountFileId)\n  if (mountIndex >= 0) {\n    archiveMounts.value.splice(mountIndex, 1)\n    logger.info('RECORD UNMOUNT', mountPoint)\n  } else {\n    logger.info('DELETE OF NODE NOT FOR US', {\n      mountPoint,\n      archiveMounts: archiveMounts.value,\n    })\n  }\n}\n\nonBeforeMount(() => {\n  subscribe('files:node:deleted', onMountPointDeleted)\n  subscribe('files:node:renamed', onMountPointRenamed)\n  subscribe('notifications:notification:received', onNotification)\n})\n\nonUnmounted(() => {\n  unsubscribe('files:node:deleted', onMountPointDeleted)\n  unsubscribe('files:node:renamed', onMountPointRenamed)\n  unsubscribe('notifications:notification:received', onNotification)\n})\n\n</script>\n<style lang=\"scss\" scoped>\n.files-tab {\n  .flex {\n    display:flex;\n    &.flex-center {\n      align-items:center;\n    }\n    &.flex-wrap {\n      flex-wrap:wrap;\n    }\n    .flex-grow {\n      flex-grow:1;\n    }\n  }\n  a.icon {\n    background-position: left;\n    padding-left:20px;\n  }\n  ::v-deep .archive-info {\n    .list-item__wrapper{\n      &:not(.archive-comment) {\n        .list-item-content__wrapper {\n          height:24px;\n        }\n        a.list-item {\n          padding:0;\n        }\n      }\n      &.archive-comment {\n        a.list-item {\n          padding:8px 0;\n          .line-two__subtitle {\n            max-width:100%;\n            white-space:normal;\n          }\n        }\n      }\n      &.archive-error {\n        .line-one__details {\n          font-weight:bold;\n          font-style:italic;\n          color:red;\n        }\n      }\n    }\n  }\n  .files-tab-entry {\n    min-height:44px;\n    &.clickable {\n      &, & * {\n        cursor:pointer;\n      }\n    }\n    .files-tab-entry__avatar {\n      width: 32px;\n      height: 32px;\n      line-height: 32px;\n      font-size: 18px;\n      background-color: var(--color-text-maxcontrast);\n      border-radius: 50%;\n      flex-shrink: 0;\n    }\n    .files-tab-entry__desc {\n      flex: 1 1;\n      padding: 8px;\n      line-height: 1.2em;\n      min-width:0;\n      h5 {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        max-width: inherit;\n      }\n    }\n    &.directory-chooser {\n      .dirname {\n        font-weight:bold;\n        font-family:monospace;\n        .button {\n          display:block;\n        }\n      }\n      .label {\n        padding-right:0.5ex;\n      }\n    }\n    /* ::v-deep .archive-mounts {\n       .list-item-content > .list-item-content__actions {\n       display: block !important;\n       }\n       } */\n  }\n}\n</style>\n","import { render, staticRenderFns } from \"./FilesTab.vue?vue&type=template&id=36b940a4&scoped=true\"\nimport script from \"./FilesTab.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FilesTab.vue?vue&type=script&setup=true&lang=ts\"\nimport style0 from \"./FilesTab.vue?vue&type=style&index=0&id=36b940a4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"36b940a4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"files-tab\"},[_c('ul',[_c('li',{staticClass:\"files-tab-entry flex flex-center clickable\",on:{\"click\":function($event){_setup.showArchiveInfo = !_setup.showArchiveInfo}}},[_c('div',{staticClass:\"files-tab-entry__avatar icon-info-white\"}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\"},[_c('h5',[_vm._v(_vm._s(_setup.t(_setup.appName, 'Archive Information')))])]),_vm._v(\" \"),_c(_setup.NcActions,[_c(_setup.NcActionButton,{attrs:{\"icon\":'icon-triangle-' + (_setup.showArchiveInfo ? 'n' : 's')},model:{value:(_setup.showArchiveInfo),callback:function ($$v) {_setup.showArchiveInfo=$$v},expression:\"showArchiveInfo\"}})],1)],1),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.showArchiveInfo),expression:\"showArchiveInfo\"}],staticClass:\"files-tab-entry\"},[(_setup.loading)?_c('div',{staticClass:\"icon-loading-small\"}):_vm._e(),_vm._v(\" \"),_c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_setup.loading),expression:\"!loading\"}],staticClass:\"archive-info\"},[(_setup.isLt(0, _setup.archiveStatus))?_c(_setup.NcListItem,{class:{ 'archive-error': _setup.isLt(0, _setup.archiveStatus) },attrs:{\"name\":_setup.t(_setup.appName, 'archive status'),\"bold\":true,\"details\":_setup.archiveStatusText},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c('div',{staticClass:\"icon-error\"})]},proxy:true}],null,false,2833062560)}):_vm._e(),_vm._v(\" \"),_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, 'archive format'),\"bold\":true,\"details\":_setup.archiveInfo?.format || _setup.t(_setup.appName, 'unknown'),\"compact\":\"\"}}),_vm._v(\" \"),_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, 'MIME type'),\"bold\":true,\"details\":_setup.archiveInfo?.mimeType || _setup.t(_setup.appName, 'unknown'),\"compact\":\"\"}}),_vm._v(\" \"),_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, 'backend driver'),\"bold\":true,\"details\":_setup.archiveInfo?.backendDriver || _setup.t(_setup.appName, 'unknown'),\"compact\":\"\"}}),_vm._v(\" \"),_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, 'uncompressed size'),\"bold\":true,\"details\":_setup.humanArchiveOriginalSize,\"compact\":\"\"}}),_vm._v(\" \"),_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, 'compressed size'),\"bold\":true,\"details\":_setup.humanArchiveCompressedSize,\"compact\":\"\"}}),_vm._v(\" \"),(_setup.humanArchiveCompressedSize !== _setup.humanArchiveFileSize)?_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, 'archive file size'),\"bold\":true,\"details\":_setup.humanArchiveFileSize,\"compact\":\"\"}}):_vm._e(),_vm._v(\" \"),_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, '# archive members'),\"bold\":true,\"details\":_setup.numberOfArchiveMembers,\"compact\":\"\"}}),_vm._v(\" \"),_c(_setup.NcListItem,{attrs:{\"name\":_setup.t(_setup.appName, 'common prefix'),\"bold\":true,\"details\":_setup.commonPathPrefix,\"compact\":\"\"}}),_vm._v(\" \"),(_setup.archiveInfo?.comment)?_c(_setup.NcListItem,{staticClass:\"archive-comment\",attrs:{\"name\":_setup.t(_setup.appName, 'creator\\'s comment'),\"bold\":true,\"compact\":\"\"},scopedSlots:_vm._u([{key:\"subtitle\",fn:function(){return [_vm._v(\"\\n            \"+_vm._s(_setup.archiveInfo?.comment)+\"\\n          \")]},proxy:true}],null,false,3976111642)}):_vm._e()],1)]),_vm._v(\" \"),_c('li',{staticClass:\"files-tab-entry flex flex-center\"},[_c('div',{staticClass:\"files-tab-entry__avatar icon-password-white\"}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\"},[_c('h5',[_c('span',{staticClass:\"main-title\"},[_vm._v(_vm._s(_setup.t(_setup.appName, 'Passphrase')))]),_vm._v(\" \"),(!_setup.archivePassPhrase)?_c('span',{staticClass:\"title-annotation\"},[_vm._v(\"(\"+_vm._s(_setup.t(_setup.appName, 'unset'))+\")\")]):_vm._e()])]),_vm._v(\" \"),_c(_setup.NcActions,{attrs:{\"force-menu\":true}},[(_setup.showArchivePassPhrase)?_c(_setup.NcActionInput,{ref:\"archivePassPhraseComponent\",attrs:{\"value\":_setup.archivePassPhrase,\"type\":\"text\",\"icon\":\"icon-password\"},on:{\"submit\":_setup.setPassPhrase}},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'archive passphrase'))+\"\\n        \")]):_c(_setup.NcActionInput,{ref:\"archivePassPhraseComponent\",attrs:{\"value\":_setup.archivePassPhrase,\"type\":\"password\",\"icon\":\"icon-password\"},on:{\"submit\":_setup.setPassPhrase}},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'archive passphrase'))+\"\\n        \")]),_vm._v(\" \"),_c(_setup.NcActionCheckbox,{on:{\"change\":_setup.togglePassPhraseVisibility}},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'Show Passphrase'))+\"\\n        \")])],1)],1),_vm._v(\" \"),_c('li',{staticClass:\"files-tab-entry flex flex-center clickable\",on:{\"click\":function($event){_setup.showArchiveMounts = !_setup.showArchiveMounts}}},[_c('div',{staticClass:\"files-tab-entry__avatar icon-external-white\"}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\"},[_c('h5',[_c('span',{staticClass:\"main-title\"},[_vm._v(_vm._s(_setup.t(_setup.appName, 'Mount Points')))]),_vm._v(\" \"),(_setup.archiveMounted)?_c('span',{staticClass:\"title-annotation\"},[_vm._v(\"(\"+_vm._s('' + _setup.archiveMounts.length)+\")\")]):_c('span',{staticClass:\"title-annotation\"},[_vm._v(\"(\"+_vm._s(_setup.t(_setup.appName, 'not mounted'))+\")\")])])]),_vm._v(\" \"),_c(_setup.NcActions,[_c(_setup.NcActionButton,{attrs:{\"icon\":'icon-triangle-' + (_setup.showArchiveMounts ? 'n' : 's')},model:{value:(_setup.showArchiveMounts),callback:function ($$v) {_setup.showArchiveMounts=$$v},expression:\"showArchiveMounts\"}})],1)],1),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.showArchiveMounts),expression:\"showArchiveMounts\"}],staticClass:\"directory-chooser files-tab-entry\"},[(_setup.loading)?_c('div',{staticClass:\"icon-loading-small\"}):(_setup.archiveMounted)?_c('ul',{staticClass:\"archive-mounts\"},_vm._l((_setup.archiveMounts),function(mountPoint){return _c(_setup.NcListItem,{key:mountPoint.id,attrs:{\"force-display-actions\":true,\"bold\":false},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('a',{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(mountPoint.mountPointPath),expression:\"mountPoint.mountPointPath\"}],staticClass:\"external icon-folder icon\",attrs:{\"target\":_setup.openMountTarget,\"href\":_setup.filesAppMountPointUrl(mountPoint)}},[_vm._v(\"\\n              \"+_vm._s(mountPoint.mountPointPath)+\"\\n            \")])]},proxy:true},{key:\"actions\",fn:function(){return [_c(_setup.NcActionButton,{on:{\"click\":function($event){return _setup.unmount(mountPoint)}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c(_setup.NetworkOffIcon,{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_setup.t(_setup.appName, 'Disconnect storage')),expression:\"t(appName, 'Disconnect storage')\"}],attrs:{\"size\":20}})]},proxy:true}],null,true)})]},proxy:true},(mountPoint.mountFlags & 1)?{key:\"extra\",fn:function(){return [_c('div',[_vm._v(_vm._s(_setup.t(_setup.appName, 'Common prefix {prefix} is stripped.', { prefix: _setup.commonPathPrefix })))])]},proxy:true}:null],null,true)})}),1):_c('div',[_c(_setup.FilePrefixPicker,{attrs:{\"hint\":_setup.t(_setup.appName, 'Not mounted, create a new mount point:'),\"placeholder\":_setup.t(_setup.appName, 'base name')},on:{\"submit\":_setup.mountArchive},model:{value:(_setup.archiveMountFileInfo),callback:function ($$v) {_setup.archiveMountFileInfo=$$v},expression:\"archiveMountFileInfo\"}}),_vm._v(\" \"),_c('div',{staticClass:\"flex flex-center\"},[_c('div',{staticClass:\"label\",on:{\"click\":_setup.openMountOptionsMenu}},[_vm._v(\"\\n            \"+_vm._s(_setup.t(_setup.appName, 'Mount Options'))+\"\\n          \")]),_vm._v(\" \"),_c(_setup.NcActions,{ref:\"mountOptionsComponent\",attrs:{\"force-menu\":true}},[_c(_setup.NcActionCheckbox,{ref:\"mountStripCommonPathPrefixComponent\",attrs:{\"checked\":_setup.archiveMountStripCommonPathPrefix},on:{\"change\":function($event){_setup.archiveMountStripCommonPathPrefix = !_setup.archiveMountStripCommonPathPrefix}}},[_vm._v(\"\\n              \"+_vm._s(_setup.t(_setup.appName, 'strip common path prefix'))+\"\\n            \")]),_vm._v(\" \"),_c(_setup.NcActionCheckbox,{ref:\"mountBackgroundJobComponent\",attrs:{\"checked\":_setup.archiveMountBackgroundJob},on:{\"change\":function($event){_setup.archiveMountBackgroundJob = !_setup.archiveMountBackgroundJob}}},[_vm._v(\"\\n              \"+_vm._s(_setup.t(_setup.appName, 'schedule as background job'))+\"\\n            \")])],1)],1)],1)]),_vm._v(\" \"),_c('li',{staticClass:\"files-tab-entry flex flex-center clickable\",on:{\"click\":function($event){_setup.showArchiveExtraction = !_setup.showArchiveExtraction}}},[_c('div',{staticClass:\"files-tab-entry__avatar icon-play-white\"}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\"},[_c('h5',[_vm._v(_vm._s(_setup.t(_setup.appName, 'Extract Archive')))])]),_vm._v(\" \"),_c(_setup.NcActions,[_c(_setup.NcActionButton,{attrs:{\"icon\":'icon-triangle-' + (_setup.showArchiveExtraction ? 'n' : 's')},model:{value:(_setup.showArchiveExtraction),callback:function ($$v) {_setup.showArchiveExtraction=$$v},expression:\"showArchiveExtraction\"}})],1)],1),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.showArchiveExtraction),expression:\"showArchiveExtraction\"}],staticClass:\"directory-chooser files-tab-entry\"},[(_setup.loading)?_c('div',{staticClass:\"icon-loading-small\"}):_c('div',[_c(_setup.FilePrefixPicker,{attrs:{\"hint\":_setup.t(_setup.appName, 'Choose a directory to extract the archive to:'),\"placeholder\":_setup.t(_setup.appName, 'basename')},on:{\"submit\":_setup.extractArchive},model:{value:(_setup.archiveExtractFileInfo),callback:function ($$v) {_setup.archiveExtractFileInfo=$$v},expression:\"archiveExtractFileInfo\"}}),_vm._v(\" \"),_c('div',{staticClass:\"flex flex-center\"},[_c('div',{staticClass:\"label\",on:{\"click\":_setup.openExtractionOptionsMenu}},[_vm._v(\"\\n            \"+_vm._s(_setup.t(_setup.appName, 'Extraction Options'))+\"\\n          \")]),_vm._v(\" \"),_c(_setup.NcActions,{ref:\"extractionOptionsComponent\",attrs:{\"force-menu\":true}},[_c(_setup.NcActionCheckbox,{attrs:{\"checked\":_setup.archiveExtractStripCommonPathPrefix},on:{\"change\":function($event){_setup.archiveExtractStripCommonPathPrefix = !_setup.archiveExtractStripCommonPathPrefix}}},[_vm._v(\"\\n              \"+_vm._s(_setup.t(_setup.appName, 'strip common path prefix'))+\"\\n            \")]),_vm._v(\" \"),_c(_setup.NcActionCheckbox,{ref:\"extractBackgroundJobComponent\",attrs:{\"checked\":_setup.archiveExtractBackgroundJob},on:{\"change\":function($event){_setup.archiveExtractBackgroundJob = !_setup.archiveExtractBackgroundJob}}},[_vm._v(\"\\n              \"+_vm._s(_setup.t(_setup.appName, 'schedule as background job'))+\"\\n            \")])],1)],1)],1)]),_vm._v(\" \"),_c('li',{staticClass:\"files-tab-entry flex flex-center clickable\",on:{\"click\":function($event){_setup.showPendingJobs = !_setup.showPendingJobs}}},[_c('div',{staticClass:\"files-tab-entry__avatar icon-recent-white\"}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\"},[(_setup.jobsArePending)?_c('h5',[_c('span',{staticClass:\"main-title\"},[_vm._v(_vm._s(_setup.t(_setup.appName, 'Pending Background Jobs')))]),_vm._v(\" \"),(_setup.jobsArePending)?_c('span',{staticClass:\"title-annotation\"},[_vm._v(\"(\"+_vm._s('' + Object.keys(_setup.pendingJobs).length)+\")\")]):_vm._e()]):_c('h5',[_c('span',{staticClass:\"main-title\"},[_vm._v(_vm._s(_setup.t(_setup.appName, 'No Pending Background Jobs')))])])]),_vm._v(\" \"),_c(_setup.NcActions,[_c(_setup.NcActionButton,{attrs:{\"icon\":'icon-triangle-' + (_setup.showPendingJobs ? 'n' : 's')},model:{value:(_setup.showPendingJobs),callback:function ($$v) {_setup.showPendingJobs=$$v},expression:\"showPendingJobs\"}})],1)],1),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.jobsArePending && _setup.showPendingJobs),expression:\"jobsArePending && showPendingJobs\"}],staticClass:\"directory-chooser files-tab-entry\"},[(_setup.loading)?_c('div',{staticClass:\"icon-loading-small\"}):(_setup.jobsArePending)?_c('ul',{staticClass:\"pending-jobs\"},_vm._l((_setup.pendingJobs),function(job){return _c(_setup.NcListItem,{key:job.destinationPath,attrs:{\"force-display-actions\":true,\"bold\":false},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('div',[_vm._v(_vm._s(job.destinationPath))])]},proxy:true},{key:\"actions\",fn:function(){return [_c(_setup.NcActionButton,{on:{\"click\":function($event){return _setup.cancelPendingOperation(job.target)}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c(_setup.CancelIcon,{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_setup.t(_setup.appName, 'Cancel Job')),expression:\"t(appName, 'Cancel Job')\"}],attrs:{\"size\":20}})]},proxy:true}],null,true)})]},proxy:true},(job.stripCommonPathPrefix)?{key:\"extra\",fn:function(){return [_c('div',[_vm._v(_vm._s(_setup.t(_setup.appName, 'Job type: {type}', {type: job.target === 'mount' ? _setup.t(_setup.appName, 'mount') : _setup.t(_setup.appName, 'extract')})))]),_vm._v(\" \"),_c('div',[_vm._v(_vm._s(_setup.t(_setup.appName, 'Common prefix {prefix} will be stripped.', { prefix: _setup.commonPathPrefix })))])]},proxy:true}:null],null,true)})}),1):_c('div',[_vm._v(\"\\n        \"+_vm._s(_setup.t(_setup.appName, 'No pending background job.'))+\"\\n      \")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n * @copyright 2025 Claus-Justus Heine\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { appName } from './config.ts';\nimport Vue from 'vue';\nimport { Tooltip } from '@nextcloud/vue';\nimport FilesTab from './views/FilesTab.vue';\nimport type { LegacyFileInfo } from '@nextcloud/files';\nimport { translate as t, translatePlural as n } from '@nextcloud/l10n';\n\ninterface FilesTabVue extends Vue {\n  update(fileInfo: LegacyFileInfo): Promise<unknown>,\n}\n\nVue.mixin({ data() { return { appName }; }, methods: { t, n } });\nVue.directive('tooltip', Tooltip);\n\nconst FilesTabVue = Vue.extend(FilesTab);\n\nconst createTabInstance = (parent: Vue):FilesTabVue => new FilesTabVue({ parent });\n\nexport default createTabInstance;\n"],"names":["generateUrl","url","urlParams","urlOptions","generated","nextcloudGenerateUrl","appName","queryParams","urlParam","matchAll","queryArray","key","value","Object","entries","push","encodeURIComponent","toString","e","console","debug","length","join","fileInfoToNode","fileInfo","owner","userFrontEndFolder","getCurrentUser","uid","topLevelFolder","Error","path","nodeData","id","fileid","source","generateRemoteUrl","relativePath","root","mime","mtime","Date","lastmod","size","permissions","attributes","hasPreview","type","File","Folder","isAxiosErrorResponse","error","axios","isAxiosError","response","currentInstance","sidebarRoot","busyNodes","getSidebarRoot","instance","getCurrentInstance","proxy","$parent","$options","name","setSidebarNodeBusy","state","arguments","undefined","node","getSidebarNode","status","NodeStatus","LOADING","emit","splice","_defineComponent","__name","setup","__props","_ref","expose","setBusyState","archivePassPhraseComponent","ref","mountOptionsComponent","extractionOptionsComponent","loading","fileName","computed","archiveFileId","archiveInfo","archiveStatus","archiveMounts","pendingJobs","jobsArePending","keys","initialState","getInitialState","archiveMountStripCommonPathPrefix","mountStripCommonPathPrefixDefault","archiveExtractStripCommonPathPrefix","extractStripCommonPathPrefixDefault","archiveMountBackgroundJob","mountBackgroundJob","archiveExtractBackgroundJob","extractBackgroundJob","archivePassPhrase","showArchiveInfo","showArchivePassPhrase","showArchiveMounts","showArchiveExtraction","showPendingJobs","openMountTarget","md5","archiveMountFileInfo","reactive","dirName","baseName","archiveExtractFileInfo","archiveMountBaseName","get","set","vueSet","archiveMountDirName","archiveExtractBaseName","archiveExtractDirName","archiveMountPathName","archiveExtractPathName","archiveStatusText","t","archiveMounted","humanArchiveOriginalSize","isNaN","parseInt","originalSize","formatFileSize","humanArchiveCompressedSize","compressedSize","humanArchiveFileSize","numberOfArchiveMembers","numberOfFiles","commonPathPrefix","getData","async","getArchiveInfo","refreshArchiveMounts","getPendingJobs","update","newFileInfo","split","generateAppUrl","requestData","passPhrase","responseData","post","data","messages","message","showInfo","logger","showError","timeout","TOAST_PERMANENT_TIMEOUT","defaultMountPoint","defaultTargetBaseName","filename","noEmit","oldMounts","mounts","getArchiveMounts","newMounts","filter","mount","findIndex","oldMount","mountPoint","deletedMounts","getJobIdFromOperation","operation","archivePath","mountPath","getJobIdFromJob","job","target","sourcePath","destinationPath","silent","jobs","jobId","vueDel","result","mounted","onNotification","event","notification","app","destinationData","messageRichParameters","destination","mountData","JSON","parse","info","archiveFilePath","mountPointPath","mountFileId","mountIndex","folder","onMountPointRenamed","onMountPointDeleted","onBeforeMount","subscribe","onUnmounted","unsubscribe","__sfc","ArchiveStatusOk","ArchiveStatusTooLarge","ArchiveStatusBomb","isLt","a","b","openMountOptionsMenu","openMenu","openExtractionOptionsMenu","cancelPendingOperation","delete","Array","isArray","statusText","removed","mountArchive","urlTemplate","stripCommonPathPrefix","newMount","newFileId","unmount","cloudUser","indexOf","xml","request","responseXML","documentElement","localName","namespaceURI","xmlMessages","getElementsByTagNameNS","textContent","extractArchive","targetPath","targetFolder","setPassPhrase","newPassPhrase","$el","querySelector","changeSet","patch","togglePassPhraseVisibility","visibleElement","currentValue","nextTick","filesAppMountPointUrl","NetworkOffIcon","CancelIcon","NcActionInput","NcActionCheckbox","NcActions","NcActionButton","NcListItem","FilePrefixPicker","_vm","this","_c","_self","_setup","_setupProxy","staticClass","on","$event","_v","_s","attrs","model","callback","$$v","expression","directives","rawName","_e","class","scopedSlots","_u","fn","format","mimeType","backendDriver","comment","_l","mountFlags","prefix","Vue","mixin","methods","n","directive","Tooltip","FilesTabVue","extend","FilesTab","parent"],"sourceRoot":""}